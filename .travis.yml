#
# IMPORTANT.  OS X support is so experimental that you have to specifically
# request to have it enabled, on a per-repository basis.  See
# http://docs.travis-ci.com/user/multi-os/#Manual-intervention-required
#
# This file will still work, without OS X enabled, it just won't run those
# tests.
#
language: python

os:
    - linux
    # - osx

# Setting sudo to false opts in to Travis-CI container-based builds.
sudo: false

# Use Ubuntu 14.04 LTS "trusty" instead of default 12.04
dist: trusty

# The apt packages below are needed for sphinx builds, which can no longer
# be installed with sudo apt-get.
addons:
    apt:
        packages:
            - graphviz
            - texlive-latex-extra
            - dvipng
python:
    - 2.7
    - 3.5
    - 3.6
env:
    global:
        # The following versions are the 'default' for tests, unless
        # overidden underneath. They are defined here in order to save having
        # to repeat them for all configurations.
        # - NUMPY_VERSION=1.9
        # - SCIPY_VERSION=0.14
        - ASTROPY_VERSION=2.0.4
        # - SPHINX_VERSION=1.6.6
        - DESIUTIL_VERSION=1.9.9
        - SPECTER_VERSION=0.8.3
        # This is the version of the svn data product to export.
        - DESIMODEL_VERSION=branches/test-0.9.3
        # - DESIMODEL_VERSION=trunk
        - MAIN_CMD='python setup.py'
        # These packages will always be installed.
        - CONDA_DEPENDENCIES=''
        # These packages will only be installed if we really need them.
        - CONDA_ALL_DEPENDENCIES='requests pyyaml scipy healpy numba fitsio'
        # These packages will always be installed.
        - PIP_DEPENDENCIES=''
        # These packages will only be installed if we really need them.
        - PIP_ALL_DEPENDENCIES=''
        # These pip packages need to be installed in a certain order, so we
        # do that separately from the astropy/ci-helpers scripts.
        - DESIHUB_PIP_DEPENDENCIES="desiutil=${DESIUTIL_VERSION} specter=${SPECTER_VERSION}"
        # Debug the Travis install process.
        - DEBUG=False
    matrix:
        - SETUP_CMD='egg_info'
        - SETUP_CMD='bdist_egg'
        - SETUP_CMD='test' CONDA_DEPENDENCIES=${CONDA_ALL_DEPENDENCIES}

matrix:
    # Don't wait for allowed failures.
    fast_finish: true

    # OS X support is still experimental, so don't penalize failuures.
    allow_failures:
        - os: osx
        - os: linux
          python: 3.6
          env: ASTROPY_VERSION=3.0
               SETUP_CMD='test'
               CONDA_DEPENDENCIES=${CONDA_ALL_DEPENDENCIES}

    include:

        # Check for sphinx doc build warnings.
        # Note: this test is not a perfectly realistic test of ReadTheDocs
        # builds, which operate in a much more bare-bones environment
        - os: linux
          python: 3.5
          env: SETUP_CMD='build_sphinx --warning-is-error'
               CONDA_DEPENDENCIES=${CONDA_ALL_DEPENDENCIES}

        # Coverage test.  Note that installing the coverage software can
        # change the set of packages installed by conda, so we do
        # separate 'test' and 'test --coverage'.
        - os: linux
          python: 3.5
          env: SETUP_CMD='test --coverage'
               CONDA_DEPENDENCIES=${CONDA_ALL_DEPENDENCIES}

        - os: linux
          python: 3.6
          env: ASTROPY_VERSION=3.0
               SETUP_CMD='test'
               CONDA_DEPENDENCIES=${CONDA_ALL_DEPENDENCIES}

        # - os: osx
        #   env: PYTHON_VERSION=2.7 SETUP_CMD='test'
        # - python: 3.3
        #   env: SETUP_CMD='test --open-files'
        # - python: 3.4
        #   env: SETUP_CMD='test --open-files'

        # Now try do scipy on 2.7 and an appropriate 3.x build (with latest numpy)
        # We also note the code coverage on Python 2.7.
        # - python: 2.7
        #   env: SETUP_CMD='test --coverage'  OPTIONAL_DEPS=true LC_CTYPE=C.ascii LC_ALL=C.ascii
        # - python: 3.4
        #   env: SETUP_CMD='test'  OPTIONAL_DEPS=true LC_CTYPE=C.ascii LC_ALL=C.ascii

        # Try older numpy versions
        # - python: 2.7
        #   env: NUMPY_VERSION=1.8 SETUP_CMD='test'
        # - python: 2.7
        #   env: NUMPY_VERSION=1.7 SETUP_CMD='test'
        # - python: 2.7
        #   env: NUMPY_VERSION=1.6 SETUP_CMD='test'

        # Do a PEP8 test
        # - python: 2.7
        #   env: MAIN_CMD='pep8 astropy --count' SETUP_CMD=''

install:
    - git clone git://github.com/astropy/ci-helpers.git
    - source ci-helpers/travis/setup_conda.sh
    # egg_info causes the astropy/ci-helpers script to exit before the pip
    # packages are installed, thus desiutil is not installed in that script.
    - for p in $DESIHUB_PIP_DEPENDENCIES; do r=$(echo $p | cut -d= -f1); v=$(echo $p | cut -d= -f2); pip install git+https://github.com/desihub/${r}.git@${v}#egg=${r}; done
    - if [[ $SETUP_CMD == test* ]]; then source etc/desimodel_data.sh; fi

script:
    - $MAIN_CMD $SETUP_CMD

after_success:
    - if [[ $SETUP_CMD == 'test --coverage' ]]; then coveralls; fi
